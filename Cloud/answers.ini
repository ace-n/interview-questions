[cloud_networking]
1A=prioritize throughput while maintaining acceptable latency
1B=throughput > latency
2A=yes
3A=convential proxies = clients; reverse proxies = servers
3B=convential proxy = clients; reverse proxy = servers
3C=convential = clients; reverse = servers
4A=load balancer = routing; reverse proxy = routing + modification
4B=reverse proxies can modify requests; load balancers can't
5A=active-active, active-passive
6A=send heartbeat/health-check requests, and failover if those fail
7A=traffic splitting
8A=yes
9A=push, pull
9B=pull, push
10A=CDN caches point-in-time "snapshots" of content via timestamped/versioned URLs
11A=CDN "pulls" new versions of content down periodically
12A=random, round robin, least busy
13A=software load balancing
14A=load balancer decrypts incoming requests; decryption can be expensive
15A=yes
16A=packet metadata (IP addresses, ports, etc)
17A=packet's application-level data
17B=packet contents
18A=no,yes
19A=speed;flexibility
19B=faster;more flexible
20A=map external (global) IP addresses to internal (local) ones
21A=one external IP address maps to multiple internal ones
21B=one global IP address maps to multiple local ones
22A=map incoming packets' sources to active connections' destinations

[cloud_databases]
2A=databases can only have two of {consistency, availability, partition tolerance}
3A=yes; network issues may cause partitions (between writes)
4A=weakly consistent operations may never complete, while eventually consistent ones will
4B=weakly consistent = may not complete
5A=atomicity,consistency,isolation,durability
6A=leader handles ALL writes; followers ONLY handle reads
7A=multiple leaders coordinate with each other on writes
8A=yes
9A=each model/object has its own DB instance
10A=yes; may slow down DB operations
11A=distributing a single model/object across multiple DBs
12A=yes; one shard may contain too many (or too few) records
12B=yes; one shard may contain too many records
13A=basically available, soft state (eventual consistency)
14A=hash tables
15A=redis, memcached
16A=document databases are built on top of KV stores
17A=rows are tuples of TABLES, not (primitive) values
18A=wide-column database
18B=wide-column datastore
18C=wide-column
19A=graph database
19B=graph
20A=DB queries with results, individual objects
21A=application-level
22A=cache-aside, write-through, write-back, refresh-ahead
23A=automatically update any cache entries based on a TTL
24A=return errors if your queue is overloaded

[clean_architecture]
1A=no
2A=no
3A=individual actions within overall business logic
4A=no;no
5A=only business-logic-related ones
6A=convert data to/from format used by entities
7A=external interfaces
8A=no

[osi_model]
1A=physical; cables
2A=data-link; frames
3A=network; packets
4A=transport; protocols
5A=session; open persistent connections between ports
6A=presentation; file encodings/formats
6B=presentation; file formats
7A=application; application data
8A=frames wrap packets with an (additional) MAC address
8B=frames add MAC addresses to packets
9A=Network layer (#3)
9B=Network
10A=Please do not throw sausage pizza away
10B=All people seem to need data processing
11A=REST uses URL {parameters, hierarchy}, RPC uses specific method names + HTTP method parameters
12A=/users/list
13A=/listUsernames

[leetcode]
1A=XOR all the numbers together
1B=XOR them
2A=dynamic programming computes the entire state space; memoization only handles repeats
3A=bottom-up
4A=top-down
